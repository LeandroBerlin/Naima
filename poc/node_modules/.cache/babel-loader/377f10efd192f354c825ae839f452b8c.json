{"ast":null,"code":"import _toConsumableArray from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/src/components/List.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/App.css\";\nimport { getTransaction, getTransactions, getHistory } from \"./Bigchaindb\";\nimport Logo from \"./Logo\";\nimport Credit from \"./Credit\";\n\nvar List =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(List, _Component);\n\n  function List(props) {\n    var _this;\n\n    _classCallCheck(this, List);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(List).call(this, props));\n\n    _this.getHistory = function () {\n      var history = getHistory(_this.state.hash);\n      history.then(function (res) {\n        return _this.setState({\n          transactions: res\n        });\n      });\n    };\n\n    _this.getTransactions = function () {\n      var listOutputs = getTransactions();\n      listOutputs.then(function (res) {\n        _this.setState({\n          transactionsIds: res\n        });\n\n        _this.getMetadata();\n      });\n    };\n\n    _this.getMetadata = function () {\n      Object.keys(_this.state.transactionsIds).map(function (transaction) {\n        var tx = getTransaction(_this.state.transactionsIds[transaction].id);\n        return tx.then(function (res) {\n          return _this.setState(function (state) {\n            var transactions = [].concat(_toConsumableArray(state.transactions), [res]);\n            return {\n              transactions: transactions\n            };\n          });\n        });\n      });\n    };\n\n    _this.state = {\n      //hash: props.match.params.hash,\n      hash: \"bbd08d2369edc7f2418d8ac6746f59d778cb062d247db2a11bdbb8e2fdc19cb2\",\n      transactionsIds: [],\n      transactions: []\n    };\n    return _this;\n  }\n\n  _createClass(List, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof this.state.hash === \"undefined\") {\n        this.getTransactions();\n      } else {\n        this.getHistory();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        className: \"App-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Logo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"List transaction from BigChainDB\"), this.state.transactions ? Object.keys(this.state.transactions).map(function (transaction, key) {\n        return React.createElement(\"table\", {\n          key: key,\n          className: \"transaction\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          colSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Transaction\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          className: \"hash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/view/\".concat(_this2.state.transactions[transaction].id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, _this2.state.transactions[transaction].id)))), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, \"Date\"), React.createElement(\"th\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, \"Type\")), React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, new Date(_this2.state.transactions[transaction].metadata.date).toLocaleDateString(\"en-GB\", {\n          weekday: \"long\",\n          year: \"numeric\",\n          month: \"long\",\n          day: \"numeric\",\n          hour: \"2-digit\",\n          minute: \"2-digit\"\n        })), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, _this2.state.transactions[transaction].operation))));\n      }) : \"No data available\"), React.createElement(Credit, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return List;\n}(Component);\n\nexport default List;","map":{"version":3,"sources":["/home/dci-pc-ubuntu72/Bru/hackaton_042919/Naima/Naima/poc/src/components/List.js"],"names":["React","Component","Link","getTransaction","getTransactions","getHistory","Logo","Credit","List","props","history","state","hash","then","res","setState","transactions","listOutputs","transactionsIds","getMetadata","Object","keys","map","transaction","tx","id","key","Date","metadata","date","toLocaleDateString","weekday","year","month","day","hour","minute","operation"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/App.css\";\nimport { getTransaction, getTransactions, getHistory } from \"./Bigchaindb\";\nimport Logo from \"./Logo\";\nimport Credit from \"./Credit\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      //hash: props.match.params.hash,\n      hash: \"bbd08d2369edc7f2418d8ac6746f59d778cb062d247db2a11bdbb8e2fdc19cb2\",\n      transactionsIds: [],\n      transactions: []\n    };\n  }\n\n  componentDidMount() {\n    if (typeof this.state.hash === \"undefined\") {\n      this.getTransactions();\n    } else {\n      this.getHistory();\n    }\n  }\n\n  getHistory = () => {\n    const history = getHistory(this.state.hash);\n    history.then(res => this.setState({ transactions: res }));\n  };\n\n  getTransactions = () => {\n    let listOutputs = getTransactions();\n    listOutputs.then(res => {\n      this.setState({ transactionsIds: res });\n      this.getMetadata();\n    });\n  };\n\n  getMetadata = () => {\n    Object.keys(this.state.transactionsIds).map(transaction => {\n      let tx = getTransaction(this.state.transactionsIds[transaction].id);\n      return tx.then(res =>\n        this.setState(state => {\n          const transactions = [...state.transactions, res];\n          return {\n            transactions\n          };\n        })\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <main className=\"App-header\">\n          <Logo />\n          <h3>List transaction from BigChainDB</h3>\n          {this.state.transactions\n            ? Object.keys(this.state.transactions).map((transaction, key) => (\n                <table key={key} className=\"transaction\">\n                  <tbody>\n                    <tr>\n                      <th colSpan=\"2\">Transaction</th>\n                    </tr>\n                    <tr>\n                      <td colSpan=\"2\">\n                        <p className=\"hash\">\n                          <Link\n                            to={`/view/${\n                              this.state.transactions[transaction].id\n                            }`}\n                          >\n                            {this.state.transactions[transaction].id}\n                          </Link>\n                        </p>\n                      </td>\n                    </tr>\n\n                    <tr>\n                      <th>Date</th>\n                      <th>Type</th>\n                    </tr>\n                    <tr>\n                      <td>\n                        {new Date(\n                          this.state.transactions[transaction].metadata.date\n                        ).toLocaleDateString(\"en-GB\", {\n                          weekday: \"long\",\n                          year: \"numeric\",\n                          month: \"long\",\n                          day: \"numeric\",\n                          hour: \"2-digit\",\n                          minute: \"2-digit\"\n                        })}\n                      </td>\n                      <td>{this.state.transactions[transaction].operation}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              ))\n            : \"No data available\"}\n        </main>\n        <Credit />\n      </div>\n    );\n  }\n}\n\nexport default List;\n"]},"metadata":{},"sourceType":"module"}